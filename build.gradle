plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            mappings("net.fabricmc:yarn:${rootProject.yarn_mappings}:v2")
            mappings("dev.architectury:yarn-mappings-patch-neoforge:1.21+build.4")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven {
            name 'Xander Maven'
            url 'https://maven.isxander.dev/releases'
        }

        maven {
            name 'Terraformers Maven'
            url 'https://maven.terraformersmc.com/releases'
        }

        maven {
            name 'Neoforged Maven'
            url "https://maven.neoforged.net/releases"
        }

        maven { url "https://maven.shedaniel.me/" }

        maven { url "https://maven.blamejared.com/" }

        maven { url "https://mcef-download.cinemamod.com/repositories/releases" }

        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }

            filter {
                includeGroup "maven.modrinth"
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }

    javadoc {
        exclude '**/mixin/**'
    }
}
